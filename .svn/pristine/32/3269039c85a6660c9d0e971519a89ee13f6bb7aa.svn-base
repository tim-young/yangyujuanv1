package com.yangyujuan.jdbc.dao.impl;


import org.springframework.jdbc.core.namedparam.BeanPropertySqlParameterSource;
import org.springframework.jdbc.core.namedparam.SqlParameterSource;
import org.springframework.jdbc.core.simple.ParameterizedBeanPropertyRowMapper;
import org.springframework.jdbc.core.simple.SimpleJdbcTemplate;
import org.springframework.jdbc.support.GeneratedKeyHolder;
import org.springframework.jdbc.support.KeyHolder;

import com.yangyujuan.jdbc.dao.NewsDao;
import com.yangyujuan.jdbc.JdbcUtils;
import com.yangyujuan.jdbc.domain.News;

public class NewsDaoSpringImpl implements NewsDao {
	private SimpleJdbcTemplate simpleJdbcTemplate = new SimpleJdbcTemplate(
			JdbcUtils.getDataSource());

	@Override
	public void delete(News news) {
		String sql = "delete from news where id=?";
		this.simpleJdbcTemplate.update(sql, news.getId());
	}
	
	@Override
	public void update(News news) {
		String sql = "update user set title=:title, bodytext=:bodytext, source=:source,pubTime=:pubTime where id=:id ";
		this.simpleJdbcTemplate.update(sql, new BeanPropertySqlParameterSource(news));
	}

	@Override
	public void addNews(News news) {
		String sql = "insert into News (title,bodytext,source,pubTime) values (:title,:bodytext,:source,:pubTime)";
		SqlParameterSource param = new BeanPropertySqlParameterSource(news);
		KeyHolder keyHolder = new GeneratedKeyHolder();
		this.simpleJdbcTemplate.getNamedParameterJdbcOperations().update(sql,
				param, keyHolder);
		news.setId(keyHolder.getKey().intValue());
	}

	@Override
	public News getNews(int userId) {
		String sql = "select id, title,bodytext,source,pubTime,visits  from News where id=?";
		return this.simpleJdbcTemplate.queryForObject(sql,
				ParameterizedBeanPropertyRowMapper.newInstance(News.class),
				userId);
	}


}
